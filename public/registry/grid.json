{
  "name": "grid",
  "type": "registry:ui",
  "files": [
    {
      "type": "registry:ui",
      "content": "import React, { ReactNode } from 'react';\n\nimport { cn } from '@/lib/utils';\n\ninterface GridProps {\n  container?: boolean;\n  gap?: number | { [key: string]: number };\n  className?: string;\n  children: ReactNode;\n}\n\nconst Grid = ({\n  container = true,\n  gap = 16,\n  className,\n  children,\n}: GridProps) => {\n  const gapClass = getGapClasses(gap);\n  const baseClass = container ? 'grid grid-cols-12' : '';\n  /*\n  const classes = 'grid grid-cols-12 col-span-12 col-span-4 col-span-1 col-span-2 col-span-3 col-span-4 col-span-5 col-span-6 col-span-7 col-span-8 col-span-9 col-span-10 col-span-11 col-span-12';\n  const classes_md = 'md:col-span-1 md:col-span-2 md:col-span-3 md:col-span-4 md:col-span-5 md:col-span-6 md:col-span-7 md:col-span-8 md:col-span-9 md:col-span-10 md:col-span-11 md:col-span-12';\n  const classes_lg = 'lg:col-span-1 lg:col-span-2 lg:col-span-3 lg:col-span-4 lg:col-span-5 lg:col-span-6 lg:col-span-7 lg:col-span-8 lg:col-span-9 lg:col-span-10 lg:col-span-11 lg:col-span-12';\n  const classes_xl = 'xl:col-span-1 xl:col-span-2 xl:col-span-3 xl:col-span-4 xl:col-span-5 xl:col-span-6 xl:col-span-7 xl:col-span-8 xl:col-span-9 xl:col-span-10 xl:col-span-11 xl:col-span-12';\n  const offset = 'col-start-1 col-start-2 col-start-3 col-start-4 col-start-5 col-start-6 col-start-7 col-start-8 col-start-9 col-start-10 col-start-11 col-start-12';\n  const offset_md = 'md:col-start-1 md:col-start-2 md:col-start-3 md:col-start-4 md:col-start-5 md:col-start-6 md:col-start-7 md:col-start-8 md:col-start-9 md:col-start-10 md:col-start-11 md:col-start-12';\n  const offset_lg = 'lg:col-start-1 lg:col-start-2 lg:col-start-3 lg:col-start-4 lg:col-start-5 lg:col-start-6 lg:col-start-7 lg:col-start-8 lg:col-start-9 lg:col-start-10 lg:col-start-11 lg:col-start-12';\n  const offset_xl = 'xl:col-start-1 xl:col-start-2 xl:col-start-3 xl:col-start-4 xl:col-start-5 xl:col-start-6 xl:col-start-7 xl:col-start-8 xl:col-start-9 xl:col-start-10 xl:col-start-11 xl:col-start-12';\n*/\n  return <div className={cn(baseClass, gapClass, className)}>{children}</div>;\n};\n\nexport default Grid;\n\nfunction getGapClasses(gap: number | { [key: string]: number }): string {\n  if (typeof gap === 'number') {\n    return `gap-${gap}`;\n  } else if (typeof gap === 'object') {\n    return Object.entries(gap)\n      .map(([breakpoint, value]) => {\n        if (breakpoint === 'base') {\n          return `gap-${value}`;\n        } else {\n          return `${breakpoint}:gap-${value}`;\n        }\n      })\n      .join(' ');\n  }\n  return '';\n}\n",
      "path": "ui/Grid.tsx",
      "target": "components/ui/Grid.tsx"
    }
  ]
}