{
  "name": "sidebar-01",
  "type": "registry:block",
  "registryDependencies": [
    "button",
    "popover",
    "separator",
    "input",
    "command"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "import { AccountSwitcher } from \"./account-switcher\";\nimport React, { useState } from \"react\";\nimport SearchInput from \"./search\";\nimport NavigationMenu from \"./navigation-menu\";\nimport { cn } from \"@/lib/utils\";\n\nconst Sidebar1 = () => {\n  const [isMinimized, setIsMinimized] = useState(false);\n  return (\n    <aside\n      onMouseEnter={() => setIsMinimized(false)}\n      onMouseLeave={() => setIsMinimized(true)}\n      className={cn(\n        \"flex flex-col w-fit gap-4 border p-3 rounded-lg bg-stone-100 dark:bg-stone-900 h-svh transition-all duration-300 sticky top-0 z-10\",\n        isMinimized ? \"w-[75px]\" : \"w-[300px]\"\n      )}\n    >\n      <AccountSwitcher isMinimized={isMinimized} />\n      <SearchInput isMinimized={isMinimized} />\n      <NavigationMenu isMinimized={isMinimized} />\n    </aside>\n  );\n};\n\nexport default Sidebar1;\n",
      "path": "block/sidebar-01/sidebar-01.tsx",
      "target": "components/block/sidebar-01/sidebar-01.tsx"
    },
    {
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport Image from \"next/image\";\nimport { Boxes, LucideIcon, ChevronsUpDownIcon } from \"lucide-react\";\nimport { useState } from \"react\";\n\nconst Accounts = [\n  {\n    id: 1,\n    name: \"Brett\",\n    email: \"brettw@gmail.com\",\n    image:\n      \"https://api.dicebear.com/9.x/avataaars/png?seed=Mason&backgroundColor=ffdfbf\",\n    icon: Boxes,\n  },\n  {\n    id: 2,\n    name: \"Diwanshu Midha\",\n    email: \"diwanshum@gmail.com\",\n    image:\n      \"https://api.dicebear.com/9.x/avataaars/png?seed=Amaya&backgroundColor=ffdfbf\",\n    icon: Boxes,\n  },\n  {\n    id: 3,\n    name: \"John Doe\",\n    email: \"johnd@gmail.com\",\n    image:\n      \"https://api.dicebear.com/9.x/avataaars/png?seed=Christian&backgroundColor=ffdfbf\",\n    icon: Boxes,\n  },\n];\n\nexport function AccountSwitcher({ isMinimized }: { isMinimized?: boolean }) {\n  const [open, setOpen] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(Accounts[0]);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger\n        className={cn(\n          \"grid grid-cols-[50px_1fr_20px] bg-card gap-3 p-2 shadow-sm border-border border rounded-lg hover:bg-muted\",\n          isMinimized && \"px-0 border-none\"\n        )}\n      >\n        <div className=\"relative w-[50px]\">\n          <Image\n            src={selectedAccount.image}\n            alt=\"profile image\"\n            width={50}\n            height={50}\n            className=\"rounded-md size-[50px]\"\n          />\n          <div className=\"absolute bottom-0 right-0 p-[2px] bg-black text-white size-4 ring-white ring-[1.5px] rounded-sm\">\n            <selectedAccount.icon className=\"size-3\" />\n          </div>\n        </div>\n        <div\n          className={cn(\n            \"text-start min-w-[150px] flex flex-col h-full justify-center\",\n            isMinimized && \"hidden\"\n          )}\n        >\n          <span className=\"block text-sm leading-[1.2]\">\n            {selectedAccount.name}\n          </span>\n          <span className=\"block leading-[1.2] text-foreground/70 text-xs \">\n            {selectedAccount.email}\n          </span>\n        </div>\n        <div className={cn(\"self-center\", isMinimized && \"hidden\")}>\n          <ChevronsUpDownIcon className=\"w-4 h-4\" />\n        </div>\n      </PopoverTrigger>\n      <PopoverContent className=\"p-0\">\n        {Accounts.map((account) => (\n          <UserInfo\n            onSelect={() => {\n              setSelectedAccount(account);\n              setOpen(false);\n            }}\n            key={account.id}\n            email={account.email}\n            name={account.name}\n            image={account.image}\n            Icon={account.icon}\n          />\n        ))}\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nconst UserInfo = ({\n  email,\n  name,\n  image,\n  Icon,\n  onSelect,\n}: {\n  email: string;\n  name: string;\n  image: string;\n  Icon: LucideIcon;\n  onSelect: () => void;\n}) => {\n  return (\n    <button\n      onClick={onSelect}\n      className=\"flex w-full cursor-pointer gap-3 p-2 shadow-sm border-border border rounded-lg hover:bg-muted\"\n    >\n      <div className=\"relative\">\n        <Image\n          src={image}\n          alt=\"profile image\"\n          width={40}\n          height={40}\n          className=\"rounded-md\"\n        />\n        <div className=\"absolute bottom-0 right-0 p-[2px] bg-black text-white size-4 ring-white ring-[1.5px] rounded-sm\">\n          <Icon className=\"size-full\" />\n        </div>\n      </div>\n      <div className=\"text-start min-w-[150px] flex flex-1 flex-col h-full justify-center\">\n        <span className=\"block text-sm leading-[1.2]\">{name}</span>\n        <span className=\"block leading-[1.2] text-foreground/70 text-xs \">\n          {email}\n        </span>\n      </div>\n    </button>\n  );\n};\n",
      "path": "block/sidebar-01/account-switcher.tsx",
      "target": "components/block/sidebar-01/account-switcher.tsx"
    },
    {
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n} from \"@/components/ui/command\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Calculator,\n  Calendar,\n  CreditCard,\n  Search,\n  Settings,\n  Smile,\n  User,\n} from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\n\nconst SearchInput = ({ isMinimized }: { isMinimized?: boolean }) => {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    const down = (e: KeyboardEvent) => {\n      if (e.key === \"k\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n        setOpen((open) => !open);\n      }\n    };\n    document.addEventListener(\"keydown\", down);\n    return () => document.removeEventListener(\"keydown\", down);\n  }, []);\n\n  if (isMinimized) {\n    return (\n      <div>\n        <Button\n          variant=\"outline\"\n          onClick={() => {\n            setOpen(true);\n          }}\n          className=\"size-[50px] p-3 h-10\"\n        >\n          <Search className=\" size-4 text-foreground/60\" />\n        </Button>\n        <SearchDialog isOpen={open} onOpenChange={setOpen} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"relative\">\n        <div className=\"absolute top-1/2 -translate-y-1/2 left-2\">\n          <Search className=\"size-3 text-foreground/60\" />\n        </div>\n        <Input\n          onFocus={(e) => {\n            setOpen(true);\n            e.target.blur();\n          }}\n          placeholder=\"Search\"\n          className=\"pl-7 bg-card h-10\"\n        />\n        <div className=\"absolute h-full flex items-center justify-center top-1/2 -translate-y-1/2 right-2\">\n          <kbd className=\"pointer-events-none inline-flex h-[50%] select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100\">\n            <span className=\"text-[10px]\">⌘</span>K\n          </kbd>\n        </div>\n      </div>\n      <SearchDialog isOpen={open} onOpenChange={setOpen} />\n    </div>\n  );\n};\n\nexport default SearchInput;\n\nconst SearchDialog = ({\n  isOpen,\n  onOpenChange,\n}: {\n  isOpen: boolean;\n  onOpenChange: (isOpen: boolean) => void;\n}) => {\n  return (\n    <CommandDialog open={isOpen} onOpenChange={onOpenChange}>\n      <CommandInput placeholder=\"Type a command or search...\" />\n      <CommandList>\n        <CommandEmpty>No results found.</CommandEmpty>\n        <CommandGroup heading=\"Suggestions\">\n          <CommandItem>\n            <Calendar className=\"mr-2 h-4 w-4\" />\n            <span>Calendar</span>\n          </CommandItem>\n          <CommandItem>\n            <Smile className=\"mr-2 h-4 w-4\" />\n            <span>Search Emoji</span>\n          </CommandItem>\n          <CommandItem>\n            <Calculator className=\"mr-2 h-4 w-4\" />\n            <span>Calculator</span>\n          </CommandItem>\n        </CommandGroup>\n        <CommandSeparator />\n        <CommandGroup heading=\"Settings\">\n          <CommandItem>\n            <User className=\"mr-2 h-4 w-4\" />\n            <span>Profile</span>\n            <CommandShortcut>⌘P</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <CreditCard className=\"mr-2 h-4 w-4\" />\n            <span>Billing</span>\n            <CommandShortcut>⌘B</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <Settings className=\"mr-2 h-4 w-4\" />\n            <span>Settings</span>\n            <CommandShortcut>⌘S</CommandShortcut>\n          </CommandItem>\n        </CommandGroup>\n      </CommandList>\n    </CommandDialog>\n  );\n};\n",
      "path": "block/sidebar-01/search.tsx",
      "target": "components/block/sidebar-01/search.tsx"
    },
    {
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { Separator } from \"@/components/ui/separator\";\nimport { cn } from \"@/lib/utils\";\nimport { usePathname } from \"next/navigation\";\nimport {\n  Bell,\n  ChevronDownIcon,\n  CircleDollarSign,\n  HandCoins,\n  HelpCircle,\n  HomeIcon,\n  Package,\n  Settings,\n  ShoppingCart,\n  TicketSlash,\n  User,\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\ntype MenuItem =\n  | {\n      name: string;\n      url: string;\n      icon: React.FC;\n    }\n  | {\n      name: string;\n      icon: React.FC;\n      children: MenuItem[];\n    };\n\nconst menuItems = [\n  [\n    {\n      name: \"Home\",\n      url: \"/\",\n      icon: HomeIcon,\n    },\n    {\n      name: \"Products\",\n      url: \"/products\",\n      icon: ShoppingCart,\n    },\n    {\n      name: \"Payments\",\n      icon: HandCoins,\n      children: [\n        {\n          name: \"Payments\",\n          url: \"/payment\",\n          icon: CircleDollarSign,\n        },\n        {\n          name: \"Refunds\",\n          url: \"/refunds\",\n          icon: TicketSlash,\n        },\n      ],\n    },\n    {\n      name: \"Customers\",\n      url: \"/customers\",\n      icon: User,\n    },\n  ],\n  [\n    {\n      name: \"Resources\",\n      url: \"/resources\",\n      icon: Package,\n    },\n    {\n      name: \"Notifications\",\n      url: \"/notifications\",\n      icon: Bell,\n    },\n  ],\n  [\n    {\n      name: \"Support\",\n      url: \"/support\",\n      icon: HelpCircle,\n    },\n    {\n      name: \"Settings\",\n      url: \"/settings\",\n      icon: Settings,\n    },\n  ],\n] satisfies MenuItem[][];\n\nconst NavigationMenu = ({ isMinimized }: { isMinimized?: boolean }) => {\n  const currentPathname = usePathname();\n  console.log(currentPathname);\n  return (\n    <nav>\n      {menuItems.map((section, index) => (\n        <div className=\"flex flex-col gap-4 mb-4\">\n          <ul className=\"space-y-1\">\n            {section.map((item) => (\n              <NavigationLink\n                isMinimized={isMinimized}\n                key={item.url}\n                item={item}\n                currentPathname={currentPathname}\n              />\n            ))}\n          </ul>\n          {index + 1 < menuItems.length && (\n            <Separator className=\"bg-transparent border-t border-dotted border-foreground/30\" />\n          )}\n        </div>\n      ))}\n    </nav>\n  );\n};\n\nexport default NavigationMenu;\n\nconst NavigationLink = ({\n  item,\n  isMinimized,\n  currentPathname,\n}: {\n  item: (typeof menuItems)[number][number];\n  isMinimized?: boolean;\n  currentPathname: string;\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    <li key={item.url} className=\"w-full\">\n      {item.children ? (\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className={\n            \"flex w-full items-center group/nav-link gap-4 px-3 py-2.5 hover:bg-primary/80 rounded-md hover:text-primary-foreground\"\n          }\n        >\n          <item.icon className=\"text-foreground/70 group/nav-link-hover:text-primary-foreground size-6\" />\n          <span className={cn(isMinimized && \"hidden\")}>{item.name}</span>\n          <div className={cn(isMinimized && \"hidden\", \"ml-auto\")}>\n            <ChevronDownIcon\n              className={`w-4 h-4 transition-transform ${\n                isOpen ? \"rotate-180\" : \"\"\n              }`}\n            />\n          </div>\n        </button>\n      ) : (\n        <a\n          href={item.url}\n          className={cn(\n            \"flex items-center group/nav-link gap-4 px-3 py-2.5 hover:bg-primary/80 rounded-md hover:text-primary-foreground\",\n            currentPathname === item.url && \"bg-primary\"\n          )}\n        >\n          <item.icon className=\"text-foreground/70 group/nav-link-hover:text-primary-foreground size-6\" />\n          <span className={cn(isMinimized && \"hidden\")}>{item.name}</span>\n        </a>\n      )}\n\n      {item.children && isOpen && (\n        <ul\n          className={cn(\n            \"ml-4 space-y-1 relative before:content-[''] before:absolute before:w-[3px] before:h-[calc(100%-20px)] before:border-l before:border-foreground/30\",\n            isMinimized && \"before:hidden ml-0\"\n          )}\n        >\n          {item.children.map((child, index) => (\n            <li\n              key={index}\n              className={cn(\n                `relative before:content-[''] before:absolute before:w-[15px] before:h-[5px] before:top-[20px]\n      before:border-l before:border-b before:border before:border-l-foreground/30\n      before:border-b-foreground/30 before:rounded-bl-[50%] before:border-t-0 before:border-r-0`,\n                isMinimized && \"before:hidden\"\n              )}\n            >\n              <a\n                className={cn(\n                  \"flex ml-4 group/nav-link items-center gap-4 px-3 h-10 hover:bg-primary rounded-md hover:text-primary-foreground\",\n                  isMinimized && \"ml-0\",\n                  currentPathname === child.url &&\n                    \"bg-primary text-primary-foreground\"\n                )}\n                href={child.url}\n              >\n                <child.icon className=\"text-foreground/70 size-5 group/nav-link-hover:text-primary-foreground\" />\n                <span className={cn(isMinimized && \"hidden\")}>\n                  {child.name}\n                </span>\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n",
      "path": "block/sidebar-01/navigation-menu.tsx",
      "target": "components/block/sidebar-01/navigation-menu.tsx"
    }
  ]
}